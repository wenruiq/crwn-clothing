{"ast":null,"code":"import ShopActionTypes from './shop.types'; // // Old firebase observer pattern\n// export const updateCollections = collectionsMap => ({\n//   type: ShopActionTypes.UPDATE_COLLECTIONS,\n//   payload: collectionsMap,\n// });\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); // updateCollections(collectionsMap);\n\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/wenruiqu/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","firestore","collection","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","setState","loading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,aAAa,CAACG,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD,CADmC,CAEnC;;AACA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD,GARD;AASD,CAVM","sourcesContent":["import ShopActionTypes from './shop.types';\n\n// // Old firebase observer pattern\n// export const updateCollections = collectionsMap => ({\n//   type: ShopActionTypes.UPDATE_COLLECTIONS,\n//   payload: collectionsMap,\n// });\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    \n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      // updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    });\n  }\n}"]},"metadata":{},"sourceType":"module"}